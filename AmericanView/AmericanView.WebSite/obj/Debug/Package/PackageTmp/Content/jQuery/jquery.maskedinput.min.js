!function (a) { "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require("jquery") : jQuery) }(function (a) {
    var B, p = navigator.userAgent, G = /iphone/i.test(p), H = /chrome/i.test(p), C = /android/i.test(p); a.mask = { definitions: { 9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]" }, autoclear: !0, dataName: "rawMaskFn", placeholder: "_" }; a.fn.extend({
        caret: function (a, f) {
            var e; if (0 !== this.length && !this.is(":hidden")) return "number" == typeof a ? (f = "number" == typeof f ? f : a, this.each(function () {
                this.setSelectionRange ?
                this.setSelectionRange(a, f) : this.createTextRange && (e = this.createTextRange(), e.collapse(!0), e.moveEnd("character", f), e.moveStart("character", a), e.select())
            })) : (this[0].setSelectionRange ? (a = this[0].selectionStart, f = this[0].selectionEnd) : document.selection && document.selection.createRange && (e = document.selection.createRange(), a = 0 - e.duplicate().moveStart("character", -1E5), f = a + e.text.length), { begin: a, end: f })
        }, unmask: function () { return this.trigger("unmask") }, mask: function (x, f) {
            var e, y, h, v, q, p, l, D; return !x &&
            0 < this.length ? (e = a(this[0]), (e = e.data(a.mask.dataName)) ? e() : void 0) : (f = a.extend({ autoclear: a.mask.autoclear, placeholder: a.mask.placeholder, completed: null }, f), y = a.mask.definitions, h = [], v = l = x.length, q = null, a.each(x.split(""), function (a, f) { "?" == f ? (l--, v = a) : y[f] ? (h.push(new RegExp(y[f])), null === q && (q = h.length - 1), v > a && (p = h.length - 1)) : h.push(null) }), this.trigger("unmask").each(function () {
                function e() { if (f.completed) { for (var g = q; p >= g; g++) if (h[g] && k[g] === r(g)) return; f.completed.call(c) } } function r(g) {
                    return f.placeholder.charAt(g <
                    f.placeholder.length ? g : 0)
                } function t(g) { for (; ++g < l && !h[g];); return g } function E(g, b) { var a, d; if (!(0 > g)) { a = g; for (d = t(b) ; l > a; a++) if (h[a]) { if (!(l > d && h[a].test(k[d]))) break; k[a] = k[d]; k[d] = r(d); d = t(d) } w(); c.caret(Math.max(q, g)) } } function I(a) { var b, c, d; b = a; for (a = r(a) ; l > b; b++) if (h[b]) { if (c = t(b), d = k[b], k[b] = a, !(l > c && h[c].test(d))) break; a = d } } function J() {
                    var a = c.val(), b = c.caret(); if (a.length < D.length) { for (u(!0) ; 0 < b.begin && !h[b.begin - 1];) b.begin--; if (0 === b.begin) for (; b.begin < q && !h[b.begin];) b.begin++ } else for (u(!0) ; b.begin <
                    l && !h[b.begin];) b.begin++; c.caret(b.begin, b.begin); e()
                } function F() { u(); c.val() != A && c.change() } function z(a, b) { var c; for (c = a; b > c && l > c; c++) h[c] && (k[c] = r(c)) } function w() { c.val(k.join("")) } function u(a) {
                    var b, e, d, n = c.val(), m = -1; for (d = b = 0; l > b; b++) if (h[b]) { for (k[b] = r(b) ; d++ < n.length;) if (e = n.charAt(d - 1), h[b].test(e)) { k[b] = e; m = b; break } if (d > n.length) { z(b + 1, l); break } } else k[b] === n.charAt(d) && d++, v > b && (m = b); return a ? w() : v > m + 1 ? f.autoclear || k.join("") === K ? (c.val() && c.val(""), z(0, l)) : w() : (w(), c.val(c.val().substring(0,
                    m + 1))), v ? b : q
                } var c = a(this), k = a.map(x.split(""), function (a, b) { return "?" != a ? y[a] ? r(b) : a : void 0 }), K = k.join(""), A = c.val(); c.data(a.mask.dataName, function () { return a.map(k, function (a, b) { return h[b] && a != r(b) ? a : null }).join("") }); c.one("unmask", function () { c.off(".mask").removeData(a.mask.dataName) }).on("focus.mask", function () { if (!c.prop("readonly")) { clearTimeout(B); var a; A = c.val(); a = u(); B = setTimeout(function () { w(); a == x.replace("?", "").length ? c.caret(0, a) : c.caret(a) }, 10) } }).on("blur.mask", F).on("keydown.mask",
                function (a) { if (!c.prop("readonly")) { var b, e, d = a.which || a.keyCode; D = c.val(); if (8 === d || 46 === d || G && 127 === d) { b = c.caret(); e = b.begin; b = b.end; if (0 === b - e) { if (46 !== d) for (; 0 <= --e && !h[e];); else e = b = t(e - 1); b = 46 === d ? t(b) : b } z(e, b); E(e, b - 1); a.preventDefault() } else 13 === d ? F.call(this, a) : 27 === d && (c.val(A), c.caret(0, u()), a.preventDefault()) } }).on("keypress.mask", function (g) {
                    if (!c.prop("readonly")) {
                        var b, f, d, n = g.which || g.keyCode, m = c.caret(); if (!(g.ctrlKey || g.altKey || g.metaKey || 32 > n) && n && 13 !== n) {
                            if (0 !== m.end - m.begin &&
                            (z(m.begin, m.end), E(m.begin, m.end - 1)), b = t(m.begin - 1), l > b && (f = String.fromCharCode(n), h[b].test(f))) (I(b), k[b] = f, w(), d = t(b), C) ? setTimeout(function () { a.proxy(a.fn.caret, c, d)() }, 0) : c.caret(d), m.begin <= p && e(); g.preventDefault()
                        }
                    }
                }).on("input.mask paste.mask", function () { c.prop("readonly") || setTimeout(function () { var a = u(!0); c.caret(a); e() }, 0) }); H && C && c.off("input.mask").on("input.mask", J); u()
            }))
        }
    })
});
function cpfCnpj(a) { a = a.replace(/\D/g, ""); 14 > a.length ? (a = a.replace(/(\d{3})(\d)/, "$1.$2"), a = a.replace(/(\d{3})(\d)/, "$1.$2"), a = a.replace(/(\d{3})(\d{1,2})$/, "$1-$2")) : (a = a.replace(/^(\d{2})(\d)/, "$1.$2"), a = a.replace(/^(\d{2})\.(\d{3})(\d)/, "$1.$2.$3"), a = a.replace(/\.(\d{3})(\d)/, ".$1/$2"), a = a.replace(/(\d{4})(\d)/, "$1-$2")); return a };